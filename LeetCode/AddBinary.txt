class Solution:
    def addBinary(self, a: str, b: str) -> str:
        """if len(a) == 0:
            return b
        if len(b) == 0:
            return a
        if a[-1] == '1' and b[-1] == '1':
            return self.addBinary(a[0:-1],self.addBinary(b[0:-1],'1')) + '0'
        elif a[-1] == '0' and b[-1] == '0':
            return self.addBinary(a[0:-1],b[0:-1]) + '0'
        else:
            return self.addBinary(a[0:-1],b[0:-1]) + '1'"""
        if len(a) < len(b):
            retval = list('0' + b)
            smaller = list(a)
        else:
            retval = list('0' + a)
            smaller = list(b)
        dist = len(retval) - len(smaller)
        for i in range(len(smaller)-1,-1,-1):
            if retval[i+dist] == '1' and smaller[i] == '1':
                retval[i+dist] = '0'
                index = (i+dist) - 1
                while index > -1 and retval[index] == '1':
                    retval[index] = '0'
                    index = index - 1
                retval[index] = '1'
            elif retval[i+dist] == smaller[i]:
                retval[i+dist] = '0'
            else:
                retval[i+dist] = '1'
        if retval[0] == '0':
            retval = retval[1:]
        return ''.join(retval)
