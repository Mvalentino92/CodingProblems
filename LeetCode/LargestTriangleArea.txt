class Solution:
    def area(self, a: int, b: int, c: int):
        if a + b > c and a + c > b and c + b > a:
            return c*((b**2 - ((a**2 - c**2 - b**2)/(-2*c))**2)**(1/2))/2
        return 0
    
    def sides(self, p1: List[int], p2: List[int], p3: List[int]):
        a = ((p1[0] - p2[0])**2 + (p1[1] - p2[1])**2)**(1/2)
        b = ((p1[0] - p3[0])**2 + (p1[1] - p3[1])**2)**(1/2)
        c = ((p3[0] - p2[0])**2 + (p3[1] - p2[1])**2)**(1/2)
        return a,b,c
    
    def largestTriangleArea(self, points: List[List[int]]) -> float:
        maxArea = 0
        for i in range(0,len(points)-2):
            for j in range(i+1,len(points)-1):
                for k in range(j+1,len(points)):
                    a,b,c = self.sides(points[i],points[j],points[k])
                    currentArea = self.area(a,b,c)
                    if currentArea > maxArea:
                        maxArea = currentArea
        return maxArea
        
